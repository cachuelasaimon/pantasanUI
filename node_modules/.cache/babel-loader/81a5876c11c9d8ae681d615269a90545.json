{"ast":null,"code":"import { GET, ADD, DELETE } from '../Actions/types';\nimport { v1 as uuid } from 'uuid';\nconst initialState = {\n  list: [{\n    id: uuid,\n    name: \"Sample Item\"\n  }]\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET:\n      return { ...state\n      };\n\n    case ADD:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case DELETE:\n      return { ...state,\n        list: [state.list.filter(item => item.id !== action.payload)]\n      };\n  }\n}","map":{"version":3,"sources":["C:/Users/cachu/Desktop/WebDev/React/basic_react/boiler/boiler-plate/src/Reducers/sampleReducer.js"],"names":["GET","ADD","DELETE","v1","uuid","initialState","list","id","name","state","action","type","payload","filter","item"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA0B,MAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CACF;AAACC,IAAAA,EAAE,EAAEH,IAAL;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GADE;AADW,CAArB;AAMA,eAAe,UAAUC,KAAK,GAACJ,YAAhB,EAA8BK,MAA9B,EAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,GAAL;AAAU,aAAO,EACb,GAAGS;AADU,OAAP;;AAGV,SAAKR,GAAL;AAAU,aAAO,EACb,GAAGQ,KADU;AAEbH,QAAAA,IAAI,EAAE,CACF,GAAGG,KAAK,CAACH,IADP,EAEFI,MAAM,CAACE,OAFL;AAFO,OAAP;;AAOV,SAAKV,MAAL;AAAa,aAAO,EAChB,GAAGO,KADa;AAEhBH,QAAAA,IAAI,EAAE,CACFG,KAAK,CAACH,IAAN,CAAWO,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAWG,MAAM,CAACE,OAA5C,CADE;AAFU,OAAP;AAXjB;AAkBH","sourcesContent":["import { GET, ADD, DELETE } from '../Actions/types'\r\nimport { v1 as uuid} from 'uuid'\r\n\r\nconst initialState = {\r\n    list: [\r\n        {id: uuid, name: \"Sample Item\"}\r\n    ],   \r\n}\r\n\r\nexport default function (state=initialState, action) {\r\n    switch(action.type) {\r\n        case GET: return {\r\n            ...state\r\n        }\r\n        case ADD: return {\r\n            ...state,\r\n            list: [\r\n                ...state.list,\r\n                action.payload\r\n            ]\r\n        }\r\n        case DELETE: return {\r\n            ...state,\r\n            list: [\r\n                state.list.filter(item => item.id!== action.payload)\r\n            ]\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}