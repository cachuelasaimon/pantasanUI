{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cachu\\\\Desktop\\\\WebDev\\\\React\\\\basic_react\\\\boiler\\\\boiler-plate\\\\src\\\\components\\\\sampleComponent.js\";\nimport React, { Component } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Container, Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Get, Add, Delete } from '../Actions/sampleActions';\n\nclass sampleComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: []\n    };\n\n    this.AddItem = () => {\n      // Get User Input \n      const newItem = prompt('Enter an Item'); // Check Input \n\n      const isWord = /[a-zA-Z]/; // Add Item To Glbal State\n\n      if (newItem && isWord.test(newItem)) {\n        this.props.Add(newItem);\n      }\n    };\n\n    this.DeleteItem = id => {\n      console.log(id);\n      this.props.Delete(id);\n    };\n  }\n\n  // On Mount\n  componentDidMount() {\n    const {\n      items\n    } = this.props;\n    this.setState({\n      items: items\n    });\n  } // Add Item\n\n\n  // On Update \n  componentDidUpdate(prevProps) {\n    if (prevProps.items !== this.props.items) {}\n  } // Render \n\n\n  render() {\n    const {\n      items\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.AddItem,\n      color: \"dark\",\n      className: \"m-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Add Item\"), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransitionGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, items.map(({\n      id,\n      name\n    }) => /*#__PURE__*/React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.DeleteItem(id),\n      color: \"danger\",\n      className: \"ml-auto mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, \"\\xD7\"), name))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  items: [...state.sampleItem.list]\n});\n\nexport default connect(mapStateToProps, {\n  Get,\n  Add,\n  Delete\n})(sampleComponent);","map":{"version":3,"sources":["C:/Users/cachu/Desktop/WebDev/React/basic_react/boiler/boiler-plate/src/components/sampleComponent.js"],"names":["React","Component","CSSTransition","TransitionGroup","Container","Button","ListGroup","ListGroupItem","connect","Get","Add","Delete","sampleComponent","state","items","AddItem","newItem","prompt","isWord","test","props","DeleteItem","id","console","log","componentDidMount","setState","componentDidUpdate","prevProps","render","map","name","mapStateToProps","sampleItem","list"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    CSSTransition,\r\n    TransitionGroup\r\n} from 'react-transition-group'\r\nimport { \r\n    Container, \r\n    Button, \r\n    ListGroup, \r\n    ListGroupItem\r\n} from 'reactstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Get, Add, Delete } from '../Actions/sampleActions'\r\n\r\nclass sampleComponent extends Component {\r\n    // Initial State\r\n    state = {\r\n        items : []\r\n    }\r\n    // On Mount\r\n    componentDidMount() {\r\n        const { items } = this.props\r\n        this.setState({\r\n            items: items\r\n        })\r\n    }\r\n    // Add Item\r\n    AddItem = () => {\r\n        // Get User Input \r\n        const newItem = prompt('Enter an Item')\r\n        // Check Input \r\n        const isWord = /[a-zA-Z]/;\r\n        // Add Item To Glbal State\r\n        if( newItem && isWord.test(newItem)) {\r\n           this.props.Add(newItem)\r\n        }\r\n    }\r\n    // Delete Item\r\n    DeleteItem = (id) => {\r\n        console.log(id)\r\n        this.props.Delete(id)\r\n    }\r\n    // On Update \r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.items !== this.props.items) {\r\n\r\n        }\r\n    }\r\n    // Render \r\n    render () {\r\n        const { items } = this.props\r\n        return (\r\n            <Container>\r\n                {/* Add Item Button */}\r\n                    <Button\r\n                        onClick={this.AddItem}\r\n                        color=\"dark\"\r\n                        className=\"m-3\"\r\n                        >Add Item</Button>\r\n                {/* List Group */}\r\n                <ListGroup>\r\n                    <TransitionGroup>\r\n                        { items.map( ({id,name}) => (\r\n                            <CSSTransition key={id} timeout={500}>\r\n                                <ListGroupItem>\r\n                                    {/* Delete Button */}\r\n                                        <Button\r\n                                            onClick={()=>this.DeleteItem(id)}\r\n                                            color='danger'\r\n                                            className=\"ml-auto mr-3\">\r\n                                                &times;\r\n                                            </Button>\r\n                                    {/* Item Name */}\r\n                                        { name }\r\n                                </ListGroupItem>\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    items: [...state.sampleItem.list]\r\n})\r\n\r\nexport default connect(mapStateToProps, { Get, Add, Delete })(sampleComponent)"]},"metadata":{},"sourceType":"module"}