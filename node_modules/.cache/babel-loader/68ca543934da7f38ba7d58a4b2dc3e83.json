{"ast":null,"code":"import { GET, ADD, DELETE } from '../Actions/types';\nimport { v1 as uuid } from 'uuid';\nconst initialState = {\n  list: [{\n    id: uuid,\n    name: \"Sample Item\"\n  }, {\n    id: uuid,\n    name: \"Sample Item(2)\"\n  }]\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET:\n      return { ...state\n      };\n\n    case ADD:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case DELETE:\n      return { ...state,\n        list: [state.list.filter(item => item.id !== action.payload)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/cachu/Desktop/WebDev/React/basic_react/boiler/boiler-plate/src/Reducers/sampleReducer.js"],"names":["GET","ADD","DELETE","v1","uuid","initialState","list","id","name","reducer","state","action","type","payload","filter","item"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA0B,MAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CACF;AAACC,IAAAA,EAAE,EAAEH,IAAL;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GADE,EAEF;AAACD,IAAAA,EAAE,EAAEH,IAAL;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GAFE;AADW,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,GAAL;AAAU,aAAO,EACb,GAAGU;AADU,OAAP;;AAGV,SAAKT,GAAL;AAAU,aAAO,EACb,GAAGS,KADU;AAEbJ,QAAAA,IAAI,EAAE,CACF,GAAGI,KAAK,CAACJ,IADP,EAEFK,MAAM,CAACE,OAFL;AAFO,OAAP;;AAOV,SAAKX,MAAL;AAAa,aAAO,EAChB,GAAGQ,KADa;AAEhBJ,QAAAA,IAAI,EAAE,CACFI,KAAK,CAACJ,IAAN,CAAWQ,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAWI,MAAM,CAACE,OAA5C,CADE;AAFU,OAAP;;AAMb;AAAS,aAAOH,KAAP;AAjBb;AAmBH,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["import { GET, ADD, DELETE } from '../Actions/types'\r\nimport { v1 as uuid} from 'uuid'\r\n\r\nconst initialState = {\r\n    list: [\r\n        {id: uuid, name: \"Sample Item\"},\r\n        {id: uuid, name: \"Sample Item(2)\"}\r\n    ],   \r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case GET: return {\r\n            ...state\r\n        }\r\n        case ADD: return {\r\n            ...state,\r\n            list: [\r\n                ...state.list,\r\n                action.payload\r\n            ]\r\n        }\r\n        case DELETE: return {\r\n            ...state,\r\n            list: [\r\n                state.list.filter(item => item.id!== action.payload)\r\n            ]\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}