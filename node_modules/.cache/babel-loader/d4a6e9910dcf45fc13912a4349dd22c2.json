{"ast":null,"code":"import { GET, ADD, DELETE } from '../Actions/types';\nimport { v1 as uuid } from 'uuid';\nconst initialState = {\n  list: [{\n    id: uuid(),\n    name: \"Sample Item\"\n  }, {\n    id: uuid(),\n    name: \"Sample Item(2)\"\n  }]\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET:\n      return { ...state\n      };\n\n    case ADD:\n      return { ...state,\n        list: [...state.list, {\n          id: uuid(),\n          name: action.payload\n        }]\n      };\n\n    case DELETE:\n      return { ...state,\n        list: [...state.list.filter(item => item.id !== action.payload)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/XAMP2/htdocs/PantasanUI-branch/src/Reducers/sampleReducer.js"],"names":["GET","ADD","DELETE","v1","uuid","initialState","list","id","name","reducer","state","action","type","payload","filter","item"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CACF;AAACC,IAAAA,EAAE,EAAEH,IAAI,EAAT;AAAaI,IAAAA,IAAI,EAAE;AAAnB,GADE,EAEF;AAACD,IAAAA,EAAE,EAAEH,IAAI,EAAT;AAAaI,IAAAA,IAAI,EAAE;AAAnB,GAFE;AADW,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,GAAL;AAAU,aAAO,EACb,GAAGU;AADU,OAAP;;AAGV,SAAKT,GAAL;AAAU,aAAO,EACb,GAAGS,KADU;AAEbJ,QAAAA,IAAI,EAAE,CACF,GAAGI,KAAK,CAACJ,IADP,EAEF;AAACC,UAAAA,EAAE,EAAEH,IAAI,EAAT;AAAaI,UAAAA,IAAI,EAACG,MAAM,CAACE;AAAzB,SAFE;AAFO,OAAP;;AAOV,SAAKX,MAAL;AAAa,aAAO,EAChB,GAAGQ,KADa;AAEhBJ,QAAAA,IAAI,EAAE,CACF,GAAGI,KAAK,CAACJ,IAAN,CAAWQ,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYI,MAAM,CAACE,OAA7C,CADD;AAFU,OAAP;;AAMb;AAAS,aAAOH,KAAP;AAjBb;AAmBH,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["import { GET, ADD, DELETE } from '../Actions/types'\nimport { v1 as uuid } from 'uuid'\n\nconst initialState = {\n    list: [\n        {id: uuid(), name: \"Sample Item\"},\n        {id: uuid(), name: \"Sample Item(2)\"}\n    ],   \n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case GET: return {\n            ...state\n        }\n        case ADD: return {\n            ...state,\n            list: [\n                ...state.list,\n                {id: uuid(), name:action.payload}\n            ]\n        }\n        case DELETE: return {\n            ...state,\n            list: [\n                ...state.list.filter(item => item.id !== action.payload)\n            ]\n        }\n        default: return state\n    }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}